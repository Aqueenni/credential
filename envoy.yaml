static_resources:
  clusters:
    # Web service cluster (serving static content like index.html)
    - name: web
      connect_timeout: 1000s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: web
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: web
                      port_value: 8082  # Nginx is serving on port 80

    # App service cluster (handling OAuth2 authentication and business logic)
    - name: app
      connect_timeout: 1000s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: app
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: app
                      port_value: 8080

    - name: jwks_cluster  # This is the cluster for fetching JWKS keys
      connect_timeout: 1s
      type: logical_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: jwks_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: "www.googleapis.com"
                      port_value: 443 

  listeners:
    - name: listener_0
      address:
        socket_address: { address: 0.0.0.0, port_value: 8081 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: backend
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/login" } # redirect from google
                          route: { cluster: app }                                                                                                                                              
                        - match: { prefix: "/oauth2" } # call to google
                          route: { cluster: app }
                        - match: { prefix: "/api" }  # api services to server
                          route: { cluster: app }
                        - match: { prefix: "/home" } # display home success after authentication
                          route: { cluster: app }
                        - match: { prefix: "/" }     # if any web
                          route: { cluster: web }
                http_filters:
                  - name: envoy.filters.http.jwt_authn
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                      providers:
                        google_oidc_provider:
                              issuer: "https://accounts.google.com"
                              remote_jwks:
                                http_uri:
                                  uri: "https://www.googleapis.com/oauth2/v3/certs"
                                  cluster: jwks_cluster
                                  timeout: 5s
                              forward: true
                              from_headers:
                                - name: Authorization
                                  value_prefix: "Bearer "
                      rules:
                        - match:
                            prefix: "/api" # all backend api
                          requires:
                            provider_name: google_oidc_provider
                  - name: envoy.filters.http.router
