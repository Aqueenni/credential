spring.application.name=Credentials Registration
server.port=8080

# MySQL Database Configuration
spring.datasource.url=jdbc:mysql://host.docker.internal:3306/credentialmgmt_db
spring.datasource.username=testUser
spring.datasource.password=j8$9!eS!8zL3#uS
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.properties.hibernate.hbm2ddl.create_namespaces=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true	


# OAuth2 client configuration for Google
spring.security.oauth2.client.registration.google.client-id=239680975989-44f8n36i58hme0ffs5qg7cpa1ti3dto4.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid, profile, email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.provider.google.user-info-uri=https://accounts.google.com

# Enable logs
logging.level.org.springframework.security=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=INFO 
logging.level.com.wolterskluwer=INFO
logging.file.name=credential.log
